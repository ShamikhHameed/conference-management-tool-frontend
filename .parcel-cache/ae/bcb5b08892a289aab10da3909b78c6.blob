"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = isIn;
var _assertString = _interopRequireDefault(require("./util/assertString"));
var _toString = _interopRequireDefault(require("./util/toString"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
function isIn(str, options) {
    _assertString.default(str);
    var i;
    if (Object.prototype.toString.call(options) === '[object Array]') {
        var array = [];
        for(i in options)// https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
        // istanbul ignore else
        if (({
        }).hasOwnProperty.call(options, i)) array[i] = _toString.default(options[i]);
        return array.indexOf(str) >= 0;
    } else if (_typeof(options) === 'object') return options.hasOwnProperty(str);
    else if (options && typeof options.indexOf === 'function') return options.indexOf(str) >= 0;
    return false;
}
module.exports = exports.default;
module.exports.default = exports.default;
