var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createTutorial", ()=>createTutorial
);
parcelHelpers.export(exports, "retrieveTutorials", ()=>retrieveTutorials
);
parcelHelpers.export(exports, "updateTutorial", ()=>updateTutorial
);
parcelHelpers.export(exports, "deleteTutorial", ()=>deleteTutorial
);
parcelHelpers.export(exports, "deleteAllTutorials", ()=>deleteAllTutorials
);
parcelHelpers.export(exports, "findTutorialsByTitle", ()=>findTutorialsByTitle
);
var _types = require("./types");
var _tutorialService = require("../services/tutorial.service");
var _tutorialServiceDefault = parcelHelpers.interopDefault(_tutorialService);
const createTutorial = (title, description)=>async (dispatch)=>{
        try {
            const res = await _tutorialServiceDefault.default.create({
                title,
                description
            });
            dispatch({
                type: _types.CREATE_TUTORIAL,
                payload: res.data
            });
            return Promise.resolve(res.data);
        } catch (err) {
            return Promise.reject(err);
        }
    }
;
const retrieveTutorials = ()=>async (dispatch)=>{
        try {
            const res = await _tutorialServiceDefault.default.getAll();
            dispatch({
                type: _types.RETRIEVE_TUTORIALS,
                payload: res.data
            });
        } catch (err) {
            console.log(err);
        }
    }
;
const updateTutorial = (id, data)=>async (dispatch)=>{
        try {
            const res = await _tutorialServiceDefault.default.update(id, data);
            dispatch({
                type: _types.UPDATE_TUTORIAL,
                payload: data
            });
            return Promise.resolve(res.data);
        } catch (err) {
            return Promise.reject(err);
        }
    }
;
const deleteTutorial = (id)=>async (dispatch)=>{
        try {
            await _tutorialServiceDefault.default.delete(id);
            dispatch({
                type: _types.DELETE_TUTORIAL,
                payload: {
                    id
                }
            });
        } catch (err) {
            console.log(err);
        }
    }
;
const deleteAllTutorials = ()=>async (dispatch)=>{
        try {
            const res = await _tutorialServiceDefault.default.deleteAll();
            dispatch({
                type: _types.DELETE_ALL_TUTORIALS,
                payload: res.data
            });
            return Promise.resolve(res.data);
        } catch (err) {
            return Promise.reject(err);
        }
    }
;
const findTutorialsByTitle = (title)=>async (dispatch)=>{
        try {
            const res = await _tutorialServiceDefault.default.findByTitle(title);
            dispatch({
                type: _types.RETRIEVE_TUTORIALS,
                payload: res.data
            });
        } catch (err) {
            console.log(err);
        }
    }
;
